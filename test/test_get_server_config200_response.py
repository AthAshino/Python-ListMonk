# coding: utf-8

"""
    Listmonk

    The API collection for listmonk

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from listmonk_client.models.get_server_config200_response import GetServerConfig200Response

class TestGetServerConfig200Response(unittest.TestCase):
    """GetServerConfig200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetServerConfig200Response:
        """Test GetServerConfig200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetServerConfig200Response`
        """
        model = GetServerConfig200Response()
        if include_optional:
            return GetServerConfig200Response(
                data = listmonk_client.models.server_config.ServerConfig(
                    data = listmonk_client.models.server_config_data.ServerConfig_data(
                        messengers = [
                            ''
                            ], 
                        langs = [
                            listmonk_client.models.server_config_data_langs_inner.ServerConfig_data_langs_inner(
                                code = '', 
                                name = '', )
                            ], 
                        lang = '', 
                        update = '', 
                        needs_restart = True, 
                        version = '', ), )
            )
        else:
            return GetServerConfig200Response(
        )
        """

    def testGetServerConfig200Response(self):
        """Test GetServerConfig200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
